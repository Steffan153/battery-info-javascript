(()=>{"use strict";eval('\n;// CONCATENATED MODULE: ./src/functions.ts\nconst progressBar = document.getElementById("progressBar");\nlet oldClassName;\nconst changeBatteryColor = (value) => {\n    let className = "";\n    if (value >= 75 && value <= 100)\n        className = "bg-success";\n    else if (value >= 50 && value <= 75)\n        className = "bg-info";\n    else if (value >= 25 && value <= 50)\n        className = "bg-warning";\n    else if (value >= 0 && value <= 25)\n        className = "bg-danger";\n    oldClassName = className;\n    return className;\n};\nconst changeEmoji = (value) => {\n    const emojiImage = document.getElementById("emoji");\n    if (value >= 75 && value <= 100)\n        emojiImage.src = "./img/emojis/green.png";\n    else if (value >= 50 && value <= 75)\n        emojiImage.src = "./img/emojis/blue.png";\n    else if (value >= 25 && value <= 50)\n        emojiImage.src = "./img/emojis/yellow.png";\n    else if (value >= 0 && value <= 25)\n        emojiImage.src = "./img/emojis/red.png";\n};\nconst displayChargingText = (isCharging) => {\n    const chargingText = document.getElementById("chargingText");\n    if (isCharging)\n        chargingText.classList.remove("d-none");\n    else\n        chargingText.classList.add("d-none");\n};\nconst formatBatteryLevel = (batteryLevel) => {\n    const strBatteryLevel = String(batteryLevel * 100);\n    if (strBatteryLevel[strBatteryLevel.length - 1] === "0")\n        return strBatteryLevel + "%";\n    else\n        return String((batteryLevel * 100).toFixed(1)) + "%";\n};\n// Change Level function\nfunction changeLevel(battery) {\n    const progress = document.getElementById("progress");\n    const batteryLevel = formatBatteryLevel(battery.level);\n    // Change Battery color\n    if (oldClassName)\n        progressBar.classList.remove(oldClassName); // removing the prev classname\n    progressBar.classList.add(changeBatteryColor(battery.level * 100));\n    progressBar.style.width = batteryLevel;\n    progress.innerText = batteryLevel;\n    // Change the emoji\n    changeEmoji(battery.level * 100);\n    return batteryLevel;\n}\n// Animate when charging function\nconst changeChargingAnimation = (isCharging) => {\n    if (isCharging) {\n        progressBar.classList.add("progress-bar-animated"); // Display text "Charging..."\n    }\n    else {\n        progressBar.classList.remove("progress-bar-animated"); // Display text "Charging..."\n    }\n    displayChargingText(isCharging);\n};\nconst changeDoneIn = (ch, disch) => {\n    const doneIn = document.getElementById("doneIn");\n    if (ch !== Infinity) {\n        doneIn.innerText = `Your battery will be fully charged in ${(ch / 60) | 0} mins`;\n    }\n    else if (disch !== Infinity) {\n        doneIn.innerText = `Your battery will be dead in ${(disch / 60) | 0} mins`;\n    }\n    else {\n        doneIn.innerText = "";\n    }\n};\n\n;// CONCATENATED MODULE: ./src/app.ts\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\nconst navigatorObj = navigator;\nlet batteryLevel, isCharging;\n// MAIN Function Start\nfunction showBattery() {\n    return __awaiter(this, void 0, void 0, function* () {\n        try {\n            const battery = yield navigatorObj.getBattery();\n            isCharging = battery.charging;\n            // Change Level\n            batteryLevel = changeLevel(battery);\n            changeChargingAnimation(battery.charging);\n            changeDoneIn(battery.chargingTime, battery.dischargingTime);\n        }\n        catch (err) { }\n    });\n}\n// MAIN Funtion End\nif ("getBattery" in navigator) {\n    showBattery();\n    setInterval(showBattery, 1000);\n}\nelse {\n    const unsupportedDiv = document.querySelector(".unsupported");\n    const supportedDiv = document.querySelector(".supported");\n    unsupportedDiv.style.display = "block";\n    supportedDiv.style.display = "none";\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///573\n')})();